//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/akhoroshev/Documents/spring-lang/Spring/src/Spring/src/grammar/Toylang.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ToylangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IToylangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFile([NotNull] ToylangParser.FileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] ToylangParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.blockWithBraces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockWithBraces([NotNull] ToylangParser.BlockWithBracesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] ToylangParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.stmtComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtComment([NotNull] ToylangParser.StmtCommentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.stmtFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtFunction([NotNull] ToylangParser.StmtFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.stmtVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtVariable([NotNull] ToylangParser.StmtVariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.functionParameterNames"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParameterNames([NotNull] ToylangParser.FunctionParameterNamesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParameter([NotNull] ToylangParser.FunctionParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.stmtWhile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtWhile([NotNull] ToylangParser.StmtWhileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.stmtIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtIf([NotNull] ToylangParser.StmtIfContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.stmtAssigment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtAssigment([NotNull] ToylangParser.StmtAssigmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.stmtReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtReturn([NotNull] ToylangParser.StmtReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.stmtExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtExpression([NotNull] ToylangParser.StmtExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] ToylangParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.functionArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionArguments([NotNull] ToylangParser.FunctionArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.binaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryExpression([NotNull] ToylangParser.BinaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.logicalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalExpression([NotNull] ToylangParser.LogicalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.eqExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqExpression([NotNull] ToylangParser.EqExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.compareExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareExpression([NotNull] ToylangParser.CompareExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.additionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditionExpression([NotNull] ToylangParser.AdditionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.multiplyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplyExpression([NotNull] ToylangParser.MultiplyExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.atomExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomExpression([NotNull] ToylangParser.AtomExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] ToylangParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ToylangParser.integralLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegralLiteral([NotNull] ToylangParser.IntegralLiteralContext context);
}
