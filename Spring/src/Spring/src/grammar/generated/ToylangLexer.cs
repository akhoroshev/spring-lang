//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/akhoroshev/Documents/spring-lang/Spring/src/Spring/src/grammar/Toylang.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class ToylangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, KW_RETURN=7, KW_ELSE=8, 
		KW_IF=9, KW_FUN=10, KW_VAR=11, KW_WHILE=12, OP_LOGICAL=13, OP_EQ=14, OP_ADDITIONAL=15, 
		OP_COMPARE=16, OP_MULTIPLY=17, IDENTIFIER=18, INTEGER_LITERAL=19, COMMENT=20, 
		WS=21, UNKNOWN=22;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "KW_RETURN", "KW_ELSE", 
		"KW_IF", "KW_FUN", "KW_VAR", "KW_WHILE", "OP_LOGICAL", "OP_EQ", "OP_ADDITIONAL", 
		"OP_COMPARE", "OP_MULTIPLY", "IDENTIFIER", "INTEGER_LITERAL", "COMMENT", 
		"WS", "UNKNOWN"
	};


	public ToylangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ToylangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'", "'('", "')'", "'='", "','", "'return'", "'else'", 
		"'if'", "'fun'", "'var'", "'while'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, "KW_RETURN", "KW_ELSE", "KW_IF", 
		"KW_FUN", "KW_VAR", "KW_WHILE", "OP_LOGICAL", "OP_EQ", "OP_ADDITIONAL", 
		"OP_COMPARE", "OP_MULTIPLY", "IDENTIFIER", "INTEGER_LITERAL", "COMMENT", 
		"WS", "UNKNOWN"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Toylang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ToylangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x18', '\x93', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x5', '\xE', ']', '\n', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x5', '\xF', '\x63', '\n', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x5', '\x11', 'l', '\n', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x6', '\x13', 'q', '\n', '\x13', '\r', '\x13', '\xE', 
		'\x13', 'r', '\x3', '\x14', '\x5', '\x14', 'v', '\n', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x5', '\x14', 'z', '\n', '\x14', '\x3', '\x14', '\x3', 
		'\x14', '\a', '\x14', '~', '\n', '\x14', '\f', '\x14', '\xE', '\x14', 
		'\x81', '\v', '\x14', '\x5', '\x14', '\x83', '\n', '\x14', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\a', '\x15', '\x89', '\n', 
		'\x15', '\f', '\x15', '\xE', '\x15', '\x8C', '\v', '\x15', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', 
		'\x2', '\x2', '\x18', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', 
		'\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', 
		'\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', 
		'\x11', '!', '\x12', '#', '\x13', '%', '\x14', '\'', '\x15', ')', '\x16', 
		'+', '\x17', '-', '\x18', '\x3', '\x2', '\n', '\x4', '\x2', '-', '-', 
		'/', '/', '\x4', '\x2', '>', '>', '@', '@', '\x5', '\x2', '\'', '\'', 
		',', ',', '\x31', '\x31', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x3', 
		'\x2', '\x33', ';', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\f', '\f', 
		'\xF', '\xF', '\x4', '\x2', '\v', '\f', '\"', '\"', '\x2', '\x9C', '\x2', 
		'\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'-', '\x3', '\x2', '\x2', '\x2', '\x3', '/', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '\x31', '\x3', '\x2', '\x2', '\x2', '\a', '\x33', '\x3', '\x2', 
		'\x2', '\x2', '\t', '\x35', '\x3', '\x2', '\x2', '\x2', '\v', '\x37', 
		'\x3', '\x2', '\x2', '\x2', '\r', '\x39', '\x3', '\x2', '\x2', '\x2', 
		'\xF', ';', '\x3', '\x2', '\x2', '\x2', '\x11', '\x42', '\x3', '\x2', 
		'\x2', '\x2', '\x13', 'G', '\x3', '\x2', '\x2', '\x2', '\x15', 'J', '\x3', 
		'\x2', '\x2', '\x2', '\x17', 'N', '\x3', '\x2', '\x2', '\x2', '\x19', 
		'R', '\x3', '\x2', '\x2', '\x2', '\x1B', '\\', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', '\x62', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x64', '\x3', '\x2', 
		'\x2', '\x2', '!', 'k', '\x3', '\x2', '\x2', '\x2', '#', 'm', '\x3', '\x2', 
		'\x2', '\x2', '%', 'p', '\x3', '\x2', '\x2', '\x2', '\'', '\x82', '\x3', 
		'\x2', '\x2', '\x2', ')', '\x84', '\x3', '\x2', '\x2', '\x2', '+', '\x8D', 
		'\x3', '\x2', '\x2', '\x2', '-', '\x91', '\x3', '\x2', '\x2', '\x2', '/', 
		'\x30', '\a', '}', '\x2', '\x2', '\x30', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'\x31', '\x32', '\a', '\x7F', '\x2', '\x2', '\x32', '\x6', '\x3', '\x2', 
		'\x2', '\x2', '\x33', '\x34', '\a', '*', '\x2', '\x2', '\x34', '\b', '\x3', 
		'\x2', '\x2', '\x2', '\x35', '\x36', '\a', '+', '\x2', '\x2', '\x36', 
		'\n', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\a', '?', '\x2', '\x2', 
		'\x38', '\f', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', '.', '\x2', 
		'\x2', ':', '\xE', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', 't', '\x2', 
		'\x2', '<', '=', '\a', 'g', '\x2', '\x2', '=', '>', '\a', 'v', '\x2', 
		'\x2', '>', '?', '\a', 'w', '\x2', '\x2', '?', '@', '\a', 't', '\x2', 
		'\x2', '@', '\x41', '\a', 'p', '\x2', '\x2', '\x41', '\x10', '\x3', '\x2', 
		'\x2', '\x2', '\x42', '\x43', '\a', 'g', '\x2', '\x2', '\x43', '\x44', 
		'\a', 'n', '\x2', '\x2', '\x44', '\x45', '\a', 'u', '\x2', '\x2', '\x45', 
		'\x46', '\a', 'g', '\x2', '\x2', '\x46', '\x12', '\x3', '\x2', '\x2', 
		'\x2', 'G', 'H', '\a', 'k', '\x2', '\x2', 'H', 'I', '\a', 'h', '\x2', 
		'\x2', 'I', '\x14', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\a', 'h', '\x2', 
		'\x2', 'K', 'L', '\a', 'w', '\x2', '\x2', 'L', 'M', '\a', 'p', '\x2', 
		'\x2', 'M', '\x16', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', 'x', '\x2', 
		'\x2', 'O', 'P', '\a', '\x63', '\x2', '\x2', 'P', 'Q', '\a', 't', '\x2', 
		'\x2', 'Q', '\x18', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\a', 'y', '\x2', 
		'\x2', 'S', 'T', '\a', 'j', '\x2', '\x2', 'T', 'U', '\a', 'k', '\x2', 
		'\x2', 'U', 'V', '\a', 'n', '\x2', '\x2', 'V', 'W', '\a', 'g', '\x2', 
		'\x2', 'W', '\x1A', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\a', '~', '\x2', 
		'\x2', 'Y', ']', '\a', '~', '\x2', '\x2', 'Z', '[', '\a', '(', '\x2', 
		'\x2', '[', ']', '\a', '(', '\x2', '\x2', '\\', 'X', '\x3', '\x2', '\x2', 
		'\x2', '\\', 'Z', '\x3', '\x2', '\x2', '\x2', ']', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '^', '_', '\a', '?', '\x2', '\x2', '_', '\x63', '\a', '?', 
		'\x2', '\x2', '`', '\x61', '\a', '#', '\x2', '\x2', '\x61', '\x63', '\a', 
		'?', '\x2', '\x2', '\x62', '^', '\x3', '\x2', '\x2', '\x2', '\x62', '`', 
		'\x3', '\x2', '\x2', '\x2', '\x63', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'\x64', '\x65', '\t', '\x2', '\x2', '\x2', '\x65', ' ', '\x3', '\x2', 
		'\x2', '\x2', '\x66', 'l', '\t', '\x3', '\x2', '\x2', 'g', 'h', '\a', 
		'>', '\x2', '\x2', 'h', 'l', '\a', '?', '\x2', '\x2', 'i', 'j', '\a', 
		'@', '\x2', '\x2', 'j', 'l', '\a', '?', '\x2', '\x2', 'k', '\x66', '\x3', 
		'\x2', '\x2', '\x2', 'k', 'g', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', 
		'\x2', '\x2', '\x2', 'l', '\"', '\x3', '\x2', '\x2', '\x2', 'm', 'n', 
		'\t', '\x4', '\x2', '\x2', 'n', '$', '\x3', '\x2', '\x2', '\x2', 'o', 
		'q', '\t', '\x5', '\x2', '\x2', 'p', 'o', '\x3', '\x2', '\x2', '\x2', 
		'q', 'r', '\x3', '\x2', '\x2', '\x2', 'r', 'p', '\x3', '\x2', '\x2', '\x2', 
		'r', 's', '\x3', '\x2', '\x2', '\x2', 's', '&', '\x3', '\x2', '\x2', '\x2', 
		't', 'v', '\a', '/', '\x2', '\x2', 'u', 't', '\x3', '\x2', '\x2', '\x2', 
		'u', 'v', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 
		'w', '\x83', '\a', '\x32', '\x2', '\x2', 'x', 'z', '\a', '/', '\x2', '\x2', 
		'y', 'x', '\x3', '\x2', '\x2', '\x2', 'y', 'z', '\x3', '\x2', '\x2', '\x2', 
		'z', '{', '\x3', '\x2', '\x2', '\x2', '{', '\x7F', '\t', '\x6', '\x2', 
		'\x2', '|', '~', '\t', '\a', '\x2', '\x2', '}', '|', '\x3', '\x2', '\x2', 
		'\x2', '~', '\x81', '\x3', '\x2', '\x2', '\x2', '\x7F', '}', '\x3', '\x2', 
		'\x2', '\x2', '\x7F', '\x80', '\x3', '\x2', '\x2', '\x2', '\x80', '\x83', 
		'\x3', '\x2', '\x2', '\x2', '\x81', '\x7F', '\x3', '\x2', '\x2', '\x2', 
		'\x82', 'u', '\x3', '\x2', '\x2', '\x2', '\x82', 'y', '\x3', '\x2', '\x2', 
		'\x2', '\x83', '(', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\a', 
		'\x31', '\x2', '\x2', '\x85', '\x86', '\a', '\x31', '\x2', '\x2', '\x86', 
		'\x8A', '\x3', '\x2', '\x2', '\x2', '\x87', '\x89', '\n', '\b', '\x2', 
		'\x2', '\x88', '\x87', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x88', '\x3', '\x2', '\x2', '\x2', '\x8A', 
		'\x8B', '\x3', '\x2', '\x2', '\x2', '\x8B', '*', '\x3', '\x2', '\x2', 
		'\x2', '\x8C', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\t', 
		'\t', '\x2', '\x2', '\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x90', '\b', '\x16', '\x2', '\x2', '\x90', ',', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x92', '\v', '\x2', '\x2', '\x2', '\x92', '.', '\x3', 
		'\x2', '\x2', '\x2', '\f', '\x2', '\\', '\x62', 'k', 'r', 'u', 'y', '\x7F', 
		'\x82', '\x8A', '\x3', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
