//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/akhoroshev/Documents/spring-lang/Spring/src/Spring/src/grammar/Toylang.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IToylangListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class ToylangBaseListener : IToylangListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] ToylangParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] ToylangParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] ToylangParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] ToylangParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.blockWithBraces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockWithBraces([NotNull] ToylangParser.BlockWithBracesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.blockWithBraces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockWithBraces([NotNull] ToylangParser.BlockWithBracesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] ToylangParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] ToylangParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.stmtComment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmtComment([NotNull] ToylangParser.StmtCommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.stmtComment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmtComment([NotNull] ToylangParser.StmtCommentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.stmtFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmtFunction([NotNull] ToylangParser.StmtFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.stmtFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmtFunction([NotNull] ToylangParser.StmtFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.stmtVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmtVariable([NotNull] ToylangParser.StmtVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.stmtVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmtVariable([NotNull] ToylangParser.StmtVariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.functionParameterNames"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionParameterNames([NotNull] ToylangParser.FunctionParameterNamesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.functionParameterNames"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionParameterNames([NotNull] ToylangParser.FunctionParameterNamesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.functionParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionParameter([NotNull] ToylangParser.FunctionParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.functionParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionParameter([NotNull] ToylangParser.FunctionParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.stmtWhile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmtWhile([NotNull] ToylangParser.StmtWhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.stmtWhile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmtWhile([NotNull] ToylangParser.StmtWhileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.stmtIf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmtIf([NotNull] ToylangParser.StmtIfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.stmtIf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmtIf([NotNull] ToylangParser.StmtIfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.stmtAssigment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmtAssigment([NotNull] ToylangParser.StmtAssigmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.stmtAssigment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmtAssigment([NotNull] ToylangParser.StmtAssigmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.stmtReturn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmtReturn([NotNull] ToylangParser.StmtReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.stmtReturn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmtReturn([NotNull] ToylangParser.StmtReturnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.stmtExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmtExpression([NotNull] ToylangParser.StmtExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.stmtExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmtExpression([NotNull] ToylangParser.StmtExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] ToylangParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] ToylangParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.functionArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArguments([NotNull] ToylangParser.FunctionArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.functionArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArguments([NotNull] ToylangParser.FunctionArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.binaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryExpression([NotNull] ToylangParser.BinaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.binaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryExpression([NotNull] ToylangParser.BinaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.logicalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalExpression([NotNull] ToylangParser.LogicalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.logicalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalExpression([NotNull] ToylangParser.LogicalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.eqExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqExpression([NotNull] ToylangParser.EqExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.eqExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqExpression([NotNull] ToylangParser.EqExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.compareExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareExpression([NotNull] ToylangParser.CompareExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.compareExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareExpression([NotNull] ToylangParser.CompareExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.additionExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditionExpression([NotNull] ToylangParser.AdditionExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.additionExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditionExpression([NotNull] ToylangParser.AdditionExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.multiplyExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplyExpression([NotNull] ToylangParser.MultiplyExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.multiplyExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplyExpression([NotNull] ToylangParser.MultiplyExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.atomExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtomExpression([NotNull] ToylangParser.AtomExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.atomExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtomExpression([NotNull] ToylangParser.AtomExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] ToylangParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] ToylangParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ToylangParser.integralLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegralLiteral([NotNull] ToylangParser.IntegralLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ToylangParser.integralLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegralLiteral([NotNull] ToylangParser.IntegralLiteralContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
